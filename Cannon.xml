<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
chan pic_send, pic_rcv, calc_send, calc_rcv, take_pic, projectile_arrive;

int block_y_coord;

clock systime;

const double gravity_pixels := 0.002804285714285714;</declaration>
	<template>
		<name>DataQueue</name>
		<parameter>chan &amp;send, chan &amp;receive, int buffer</parameter>
		<declaration>int size := 0;</declaration>
		<location id="id0" x="569" y="110">
			<name x="559" y="76">empty</name>
		</location>
		<location id="id1" x="807" y="110">
			<name x="739" y="76">has_data</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="637" y="220">(size - 1) == 0</label>
			<label kind="synchronisation" x="637" y="237">receive?</label>
			<label kind="assignment" x="637" y="254">size--</label>
			<nail x="807" y="212"/>
			<nail x="569" y="212"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="790" y="-51">(size - 1) &gt; 0</label>
			<label kind="synchronisation" x="790" y="-34">receive?</label>
			<label kind="assignment" x="790" y="-17">size--</label>
			<nail x="782" y="8"/>
			<nail x="841" y="8"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="guard" x="943" y="93">size &lt; buffer</label>
			<label kind="synchronisation" x="943" y="110">send?</label>
			<label kind="assignment" x="943" y="127">size++</label>
			<nail x="926" y="85"/>
			<nail x="926" y="136"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="646" y="68">send?</label>
			<label kind="assignment" x="646" y="85">size++</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Cannon</name>
		<parameter>chan &amp;trigger, int trigger_time</parameter>
		<declaration>// Place local declarations here.
int rotation_time = 80;
clock cannon_time;</declaration>
		<location id="id2" x="-799" y="-170">
			<name x="-867" y="-178">loaded</name>
		</location>
		<location id="id3" x="-654" y="-170">
			<name x="-705" y="-161">triggering</name>
			<label kind="invariant" x="-705" y="-144">cannon_time &lt;= trigger_time</label>
		</location>
		<location id="id4" x="-501" y="-170">
			<name x="-484" y="-178">reloading</name>
			<label kind="invariant" x="-484" y="-153">cannon_time &lt;= rotation_time</label>
		</location>
		<init ref="id2"/>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="-688" y="-59">cannon_time &gt; rotation_time</label>
			<nail x="-501" y="-68"/>
			<nail x="-799" y="-68"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-636" y="-204">cannon_time &gt; trigger_time</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-799" y="-229">trigger?</label>
			<label kind="assignment" x="-799" y="-212">cannon_time := 0</label>
		</transition>
	</template>
	<template>
		<name>Block</name>
		<parameter>chan &amp;update_position, urgent chan &amp;shot, int &amp;block</parameter>
		<declaration>const int impact_position := 318;

int time_in_detection_area := -1;
double starting_velocity;
clock detect_time;


int calculate_position(){

    int now_time := 0;

    return fint((0 + starting_velocity * now_time) + (0.5 * gravity_pixels * now_time));

}</declaration>
		<location id="id5" x="-289" y="-153">
			<name x="-357" y="-187">missed</name>
		</location>
		<location id="id6" x="-204" y="-153">
			<name x="-195" y="-187">hit</name>
		</location>
		<location id="id7" x="-289" y="-280">
			<name x="-263" y="-314">wait_for_impact</name>
			<label kind="invariant" x="-263" y="-297">( impact_position  + 14) &lt; calculate_position()</label>
		</location>
		<location id="id8" x="-289" y="-391">
			<name x="-255" y="-409">detection_area</name>
		</location>
		<location id="id9" x="-289" y="-535">
			<name x="-255" y="-560">drop</name>
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="guard" x="-620" y="-238">impact_position &gt; calculate_position()</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="-246" y="-238">shot?</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="guard" x="-280" y="-365">detect_time &gt; time_in_detection_area</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-595" y="-425">update_position?</label>
			<label kind="assignment" x="-595" y="-408">block := calculate_position()</label>
			<nail x="-408" y="-450"/>
			<nail x="-408" y="-331"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="assignment" x="-272" y="-501">starting_velocity := random( 2) ,
detect_time := 0,
time_in_detection_area := fint( 207 / starting_velocity)</label>
		</transition>
	</template>
	<template>
		<name>PixyCam</name>
		<parameter>chan &amp;snap</parameter>
		<declaration>
clock interval;</declaration>
		<location id="id10" x="-51" y="-119">
			<name x="0" y="-144">active</name>
			<label kind="invariant" x="0" y="-127">interval &lt;= 15</label>
		</location>
		<location id="id11" x="-51" y="-255">
			<name x="-25" y="-263">begin</name>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="-272" y="-221">interval &gt; 15</label>
			<label kind="synchronisation" x="-272" y="-204">snap!</label>
			<label kind="assignment" x="-272" y="-187">interval := 0</label>
			<nail x="-179" y="-174"/>
			<nail x="-178" y="-51"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
		</transition>
	</template>
	<template>
		<name>DetectTask</name>
		<parameter>chan &amp;resume, chan &amp;send_pic, int &amp;block_location, int &amp;block_y</parameter>
		<location id="id12" x="-2482" y="-450">
			<name x="-2456" y="-493">updating_block</name>
			<label kind="invariant" x="-2456" y="-476">block_y == block_location</label>
		</location>
		<location id="id13" x="-2592" y="-340">
			<name x="-2602" y="-374">ready</name>
		</location>
		<location id="id14" x="-2762" y="-340">
			<name x="-2805" y="-374">begin</name>
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="-2473" y="-374">block_y != block_location</label>
			<label kind="synchronisation" x="-2473" y="-357">send_pic!</label>
			<label kind="assignment" x="-2473" y="-340">block_y = block_location</label>
			<nail x="-2483" y="-340"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="synchronisation" x="-2584" y="-433">resume?</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="assignment" x="-2728" y="-331">block_y := -1</label>
		</transition>
	</template>
	<template>
		<name>ShootTask</name>
		<parameter>chan &amp;rcv_deadline, chan &amp;trigger, int &amp;new_deadline</parameter>
		<declaration>int time_to_shoot := 0;
int worst_detect_calc := 1;</declaration>
		<location id="id15" x="-144" y="110">
			<name x="-127" y="110">sleep_until_shoot</name>
			<label kind="invariant" x="-127" y="127">time_to_shoot &gt; systime</label>
		</location>
		<location id="id16" x="-25" y="-17">
		</location>
		<location id="id17" x="-221" y="-17">
			<urgent/>
		</location>
		<location id="id18" x="-442" y="-17">
			<name x="-452" y="-51">begin</name>
		</location>
		<init ref="id18"/>
		<transition>
			<source ref="id15"/>
			<target ref="id17"/>
			<label kind="guard" x="-442" y="51">time_to_shoot &lt;= systime</label>
			<label kind="synchronisation" x="-442" y="68">trigger!</label>
			<label kind="assignment" x="-442" y="85">time_to_shoot := 0</label>
			<nail x="-280" y="110"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id15"/>
			<label kind="guard" x="-161" y="42">time_to_shoot &lt; (systime + worst_detect_calc)</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="-204" y="-238">time_to_shoot == 0</label>
			<label kind="synchronisation" x="-204" y="-221">rcv_deadline!</label>
			<label kind="assignment" x="-204" y="-204">time_to_shoot := new_deadline</label>
			<nail x="-26" y="-178"/>
			<nail x="-222" y="-178"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="-195" y="-144">time_to_shoot &gt; 0</label>
			<label kind="synchronisation" x="-195" y="-127">rcv_deadline!</label>
			<label kind="assignment" x="-195" y="-110">time_to_shoot := ((time_to_shoot + new_deadline) / 2)</label>
			<nail x="-25" y="-85"/>
			<nail x="-221" y="-85"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="guard" x="-110" y="0">time_to_shoot &gt; (systime + worst_detect_calc)</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id17"/>
		</transition>
	</template>
	<template>
		<name>CalcTask</name>
		<parameter>chan &amp;send_deadline, chan &amp;rcv_picture, int &amp;deadline, int &amp;pic_position</parameter>
		<declaration>int old_y, current_y;
bool update_deadline;</declaration>
		<location id="id19" x="-2014" y="-323">
		</location>
		<location id="id20" x="-2175" y="-323">
			<urgent/>
		</location>
		<location id="id21" x="-2422" y="-323">
			<name x="-2432" y="-357">begin</name>
		</location>
		<init ref="id21"/>
		<transition>
			<source ref="id20"/>
			<target ref="id20"/>
			<label kind="guard" x="-2227" y="-187">update_deadline == false</label>
			<label kind="synchronisation" x="-2227" y="-170">send_deadline!</label>
			<label kind="assignment" x="-2227" y="-153">update_deadline = false</label>
			<nail x="-2252" y="-195"/>
			<nail x="-2091" y="-195"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="-2150" y="-620">current_y &gt; 0 &amp;&amp; current_y != pic_position</label>
			<label kind="synchronisation" x="-2150" y="-603">rcv_picture!</label>
			<label kind="assignment" x="-2150" y="-586">old_y := current_y,
current_y := pic_position,
update_deadline := true</label>
			<nail x="-2014" y="-527"/>
			<nail x="-2175" y="-527"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id20"/>
			<label kind="guard" x="-2158" y="-476">current_y == -1</label>
			<label kind="synchronisation" x="-2157" y="-459">rcv_picture!</label>
			<label kind="assignment" x="-2157" y="-442">current_y := pic_position</label>
			<nail x="-2014" y="-416"/>
			<nail x="-2175" y="-416"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="guard" x="-2150" y="-365">update_deadline == false</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="assignment" x="-2388" y="-314">old_y = -1,
current_y = -1,
update_deadline := false</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
//pic_queue = DataQueue(pic_send, pic_rcv, 3);
block = Block(take_pic, projectile_arrive, block_y_coord);


// List one or more processes to be composed into a system.
system block;</system>
	<queries>
		<query>
			<formula>E&lt;&gt; block.detection_area</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
